//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SparseApp.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SparseApp.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft Public License (Ms-PL)
        ///
        ///This license governs use of the accompanying software. If you use the software, you
        ///accept this license. If you do not accept the license, do not use the software.
        ///
        ///1. Definitions
        ///The terms &quot;reproduce,&quot; &quot;reproduction,&quot; &quot;derivative works,&quot; and &quot;distribution&quot; have the
        ///same meaning here as under U.S. copyright law.
        ///A &quot;contribution&quot; is the original software, or any additions or changes to the software.
        ///A &quot;contributor&quot; is any person that distributes its contribution und [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LicenseMahAppsMetro {
            get {
                return ResourceManager.GetString("LicenseMahAppsMetro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MICROSOFT SOFTWARE LICENSE TERMS
        ///
        ///MICROSOFT .NET LIBRARY
        ///
        ///These license terms are an agreement between Microsoft Corporation (or based on where you live, one of its affiliates) and you. Please read them. They apply to the software named above, which includes the media on which you received it, if any. The terms also apply to any Microsoft
        ///
        ///·         updates,
        ///
        ///·         supplements,
        ///
        ///·         Internet-based services, and
        ///
        ///·         support services
        ///
        ///for this software, unless other terms accomp [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LicenseMicrosoftAsync {
            get {
                return ResourceManager.GetString("LicenseMicrosoftAsync", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copyright (c) 2001, 2002, 2003 Ximian, Inc and the individuals listed
        ///on the ChangeLog entries.
        ///
        ///Copyright (C) 2008 Novell (http://www.novell.com)
        ///Copyright (C) 2009 Federico Di Gregorio.
        ///Copyright (C) 2012 Xamarin Inc (http://www.xamarin.com)
        ///
        ///Permission is hereby granted, free of charge, to any person obtaining
        ///a copy of this software and associated documentation files (the
        ///&quot;Software&quot;), to deal in the Software without restriction, including
        ///without limitation the rights to use, copy, modify, mer [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LicenseMonoOptions {
            get {
                return ResourceManager.GetString("LicenseMonoOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ninject is intended to be used in both open-source and commercial environments. To allow its use in as many
        ///situations as possible, Ninject is dual-licensed. You may choose to use Ninject under either the Apache License,
        ///Version 2.0, or the Microsoft Public License (Ms-PL). These licenses are essentially identical, but you are
        ///encouraged to evaluate both to determine which best fits your intended use.
        ///
        ///-----
        ///
        ///Apache License, Version 2.0
        ///
        ///TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LicenseNinject {
            get {
                return ResourceManager.GetString("LicenseNinject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License agreement for Ookii.Dialogs.
        ///
        ///Copyright © Sven Groot (Ookii.org) 2009
        ///All rights reserved.
        ///
        ///
        ///Redistribution and use in source and binary forms, with or without 
        ///modification, are permitted provided that the following conditions are met:
        ///
        ///1) Redistributions of source code must retain the above copyright notice, 
        ///   this list of conditions and the following disclaimer. 
        ///2) Redistributions in binary form must reproduce the above copyright notice,
        ///   this list of conditions and the following [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LicenseOokiiDialogs {
            get {
                return ResourceManager.GetString("LicenseOokiiDialogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The core Protocol Buffers technology is provided courtesy of Google.
        ///At the time of writing, this is released under the BSD license.
        ///Full details can be found here:
        ///
        ///http://code.google.com/p/protobuf/
        ///
        ///
        ///This .NET implementation is Copyright 2008 Marc Gravell
        ///
        ///Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
        ///you may not use this file except in compliance with the License.
        ///You may obtain a copy of the License at
        ///
        ///http://www.apache.org/licenses/LICENSE-2.0
        ///
        ///Unless required by appl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LicenseProtocolBufNet {
            get {
                return ResourceManager.GetString("LicenseProtocolBufNet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The BSD 3-Clause License
        ///
        ///Copyright (c) 2014, Sam-Mauris Yong
        ///All rights reserved.
        ///
        ///Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
        ///
        ///1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
        ///
        ///2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documenta [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LicenseSparseApp {
            get {
                return ResourceManager.GetString("LicenseSparseApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MIT License (MIT)
        ///
        ///Copyright (c) 2009 Osamu TAKEUCHI &lt;osamu@big.jp&gt;
        ///
        ///Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
        ///        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LicenseYamlSerializer {
            get {
                return ResourceManager.GetString("LicenseYamlSerializer", resourceCulture);
            }
        }
    }
}
